# Generated by Django 4.2.3 on 2023-07-26 04:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.CharField(max_length=10, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(max_length=50, null=True)),
                ('course_name', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=100, null=True)),
                ('status', models.BooleanField(default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('department_head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='head_of_department', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='designations', to='performance.department')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar/')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('joined_date', models.DateField(null=True)),
                ('employment_type', models.CharField(choices=[('fulltime_permanent', 'Fulltime Permanent'), ('fulltime_probation', 'Fulltime Probation'), ('part_time_contract', 'Part Time Contract')], max_length=20, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('IN', 'Inactive')], max_length=50, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.department')),
                ('designation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.designation')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('promotion_designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='promotion', to='performance.designation')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Matrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('L', 'Low'), ('M', 'Moderate'), ('H', 'High')], max_length=2, null=True)),
                ('note', models.CharField(max_length=100, null=True)),
                ('weight', models.IntegerField(choices=[('L', 'Low'), ('M', 'Moderate'), ('H', 'High')], null=True)),
            ],
            options={
                'verbose_name_plural': 'Matrices',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initiated_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('PA', 'Pending Approval'), ('S', 'Scheduled'), ('C', 'Completed'), ('C', 'Cancelled')], max_length=2, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('participants', models.ManyToManyField(to='performance.employee')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainer', to='performance.course')),
                ('training_course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='performance.course')),
            ],
        ),
        migrations.CreateModel(
            name='Termination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_termination', models.DateField(null=True)),
                ('reason', models.CharField(max_length=100, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('due_date', models.DateField(null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue')], default='pending', max_length=100, null=True)),
                ('priority', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], max_length=100, null=True)),
                ('approval', models.BooleanField(blank=True, choices=[(True, 'Request Accepted'), (False, 'Request Declined')], default=False, null=True)),
                ('performance_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('assigned_to', models.ManyToManyField(to='performance.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_promotion', models.DateField(null=True)),
                ('reason', models.CharField(max_length=100, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('bonus', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('new_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='promoted_employee', to='performance.employee')),
                ('employment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.employee')),
                ('new_position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new', to='performance.employee')),
                ('past_position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='past', to='performance.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Probation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_permanency', models.DateField(null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='performance.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Onboarding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('onboarding_start_date', models.DateField(null=True)),
                ('onboarding_end_date', models.DateField(null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='performance.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('received_date', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recipient_notification', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sender_notification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('content', models.TextField(null=True)),
                ('news_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('employees', models.ManyToManyField(blank=True, related_name='news', to='performance.employee')),
                ('managers', models.ManyToManyField(blank=True, related_name='manager_news', to='performance.employee')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Author', to='performance.employee')),
            ],
            options={
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('content', models.TextField(null=True)),
                ('file', models.FileField(null=True, upload_to='documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.employee')),
                ('employees', models.ManyToManyField(blank=True, related_name='documents', to='performance.employee')),
                ('managers', models.ManyToManyField(blank=True, related_name='manager_docs', to='performance.employee')),
            ],
        ),
        migrations.CreateModel(
            name='DevelopmentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IDP_name', models.CharField(max_length=100, null=True)),
                ('initiated_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('NI', 'Not Initiated'), ('I', 'Initiated'), ('IP', 'In Progress'), ('C', 'Completed')], max_length=2, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coach', to='performance.employee')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.course')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='IDP_employee', to='performance.employee')),
                ('goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.task')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='coach',
            field=models.ManyToManyField(blank=True, to='performance.employee'),
        ),
        migrations.CreateModel(
            name='Competency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competency_name', models.CharField(max_length=100, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('initiated_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='performance.department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='performance.designation')),
            ],
            options={
                'verbose_name_plural': 'Competencies',
            },
        ),
        migrations.CreateModel(
            name='Appraisal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appraisal_cycle', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('others', models.CharField(blank=True, max_length=100, null=True)),
                ('start_from', models.DateTimeField(auto_now_add=True, null=True)),
                ('to', models.DateTimeField(null=True)),
                ('due_date', models.DateTimeField(null=True)),
                ('appraisal_Status', models.CharField(choices=[('P', 'Pending'), ('IP', 'In Progress'), ('C', 'Completed')], max_length=50, null=True)),
                ('final_rating', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('colleagues', models.ManyToManyField(related_name='colleagues', to='performance.employee')),
                ('competencies', models.ManyToManyField(to='performance.competency')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.designation')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.employee')),
                ('evaluators', models.ManyToManyField(related_name='evaluators', to='performance.employee')),
                ('potential', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='performance.matrix')),
                ('questions', models.ManyToManyField(to='performance.question')),
            ],
        ),
    ]
